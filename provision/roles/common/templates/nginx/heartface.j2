server {
    listen 443 ssl;
    listen [::]:443 ssl;

    server_name  {{ domain_name }} {% if domain_list is defined %}{{ domain_list | join(" ") }} {% endif %};

    ssl on;
    ssl_certificate /etc/letsencrypt/live/{{ domain_name }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ domain_name }}/privkey.pem;
    ssl_session_timeout 10m;
    keepalive_timeout 70;

    access_log /var/log/nginx/{{ domain_name }}_access.log;
    error_log /var/log/nginx/{{ domain_name }}_error.log;

    # Max request size allowed (needed because of profile picture uploads -> could
    #  constrain it to specific locations, including admin)
    client_max_body_size 8000M;
    client_body_buffer_size 8000M;
    client_body_timeout 120;

    disable_symlinks off;

    location /backend/static {
        alias /usr/local/lib/heartface/current/assets;
    }

    location /media {
        alias /var/www/heartface/media;
    }

    location /upload/ {
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Max-Age 86400;
        add_header Access-Control-Allow-Headers 'accept, accept-encoding, authorization, content-type, dnt, origin, user-agent, x-csrftoken, x-requested-with';

        # After upload, pass altered request body to this django view
        upload_pass   /api/v1/videos/upload/;

        # Store files to the MEDIA_ROOT directory into videos sub dir
        upload_store /var/www/heartface/media/videos;
        upload_store_access user:rw group:rw all:rw;

        # Set specified fields in request body
        upload_set_form_field $upload_field_name.name "$upload_file_name";
        upload_set_form_field $upload_field_name.path "$upload_tmp_path";

        upload_cleanup 400-599;
    }

    location / {
        root /var/www/heartface;
        index index.html;
        try_files $uri $uri/ /;
    }


    location ~ ^/(api|payments|admin|accounts|rest-auth|docs) {
        uwsgi_pass 127.0.0.1:3031;
        include /etc/nginx/uwsgi_params;
    }

    error_page 404 /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}

server {
    listen 5555 ssl;
    listen [::]:5555 ssl;

    server_name  {{ domain_name }} {% if domain_list is defined %}{{ domain_list | join(" ") }} {% endif %};

    ssl on;
    ssl_certificate /etc/letsencrypt/live/{{ domain_name }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ domain_name }}/privkey.pem;
    ssl_session_timeout 10m;
    keepalive_timeout 70;

    location / {
        proxy_pass http://127.0.0.1:5556/;
    }
}

server {
    listen 80;
    listen [::]:80;

    access_log /var/log/nginx/http_{{ domain_name }}_access.log;

    server_name {{ domain_name }} {% if domain_list is defined %}{{ domain_list | join(" ") }} {% endif %};
    keepalive_timeout 70;

    include /etc/nginx/letsencrypt-acme-challenge.conf;

    location / {
        return 301 https://{{ domain_name }}$request_uri;
    }
}
