# Generated by Django 2.0.1 on 2018-04-26 22:22
import uuid

from django.db import migrations

# No longer use this in libs.scrape so cant just import it
# Reproduce here so the migration still works
HOST_INFO = {'(.*\.)?offspring.co.uk': {'Supplier': 'Offspring', 'Scraper': None},
             '(.*\.)?schuh.co.uk': {'Supplier': 'Schuh', 'Scraper': None},
             '(.*\.)?footasylum.com': {'Supplier': 'Footasylum', 'Scraper': None},
             '(.*\.)?sportsdirect.com': {'Supplier': 'Sports Direct',
                                         'Scraper': None,
                                         'allowed_params': ['colcode'],
                                         'headers': {'X-Forward-Cookie': 'ChosenSite=www; SportsDirect_AnonymousUserCurrency=GBP;'}
                                         },
             '(.*\.)?vans.co.uk': {'Supplier': 'Vans', 'Scraper': None},
             '(.*\.)?newbalance.co.uk': {'Supplier': 'New Balance', 'Scraper': None},
             '(.*\.)?timberland.co.uk': {'Supplier': 'Timberland', 'Scraper': None},
             '(.*\.)?adidas.co.uk': {'Supplier': 'Adidas', 'Scraper': None},
             '(.*\.)?urbanoutfitters.com': {'Supplier': 'Urban Outfitters', 'Scraper': None},
             '(.*\.)?flightclub.com': {'Supplier': 'Fight Club', 'Scraper': None,
                                       'headers': {'X-Forward-Cookie': 'currency=GBP;'}
                                       },
             '(.*\.)?urbanindustry.co.uk': {'Supplier': 'Urban Industry', 'Scraper': None},
             '(.*\.)?nike.com': {'Supplier': 'Nike', 'Scraper': None},
             '(.*\.)?footlocker.co.uk': {'Supplier': 'Foot Locker', 'Scraper': None,
                                         'allowed_params': ['v', ]},
             '(.*\.)?ebay.co.uk': {'Supplier': 'eBay', 'Scraper': None},
             '(.*\.)?stockx.com': {'Supplier': 'StockX', 'Scraper': None},
             }


def _add_guessed_supplier_id(apps, schema_editor):
    Supplier = apps.get_model('core', 'Supplier')

    name_to_id = {HOST_INFO[id]['Supplier']: id for id in HOST_INFO.keys()}

    for supplier in Supplier.objects.all():
        supplier.supplier_id = name_to_id.get(supplier.name, uuid.uuid4())
        supplier.save()


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0070_supplier_supplier_id'),
    ]

    operations = [
        migrations.RunPython(code=_add_guessed_supplier_id, reverse_code=migrations.RunPython.noop)
    ]
